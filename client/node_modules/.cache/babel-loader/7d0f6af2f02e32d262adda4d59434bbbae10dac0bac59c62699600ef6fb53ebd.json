{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass CanvasState {\n  constructor() {\n    this.canvas = null;\n    this.undoList = [];\n    this.redoList = [];\n    this.username = '';\n    this.socket = null;\n    this.session = null;\n    makeAutoObservable(this);\n  }\n  setSocket(value) {\n    this.socket = value;\n  }\n  setSession(value) {\n    this.session = value;\n  }\n  setUserName(username) {\n    this.username = username;\n  }\n  setCanvas(canvas) {\n    this.canvas = canvas;\n  }\n  pushToUndo(data) {\n    this.undoList.push(data);\n  }\n  pushToRedo(data) {\n    this.redoList.push(data);\n  }\n  undo() {\n    let context = this.canvas.getContext('2d');\n    if (this.undoList.length > 0) {\n      let dataUrl = this.undoList.pop();\n      this.redoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n      img.onload = () => {\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        context.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    } else {\n      context.clearRect(0, 0, this.canvas.width, this.canvas.heigth);\n    }\n  }\n  redo() {\n    let context = this.canvas.getContext('2d');\n    if (this.redoList.length > 0) {\n      let dataUrl = this.redoList.pop();\n      this.undoList.push(this.canvas.toDataURL());\n      let img = new Image();\n      img.src = dataUrl;\n      img.onload = () => {\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        context.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      };\n    }\n  }\n}\nexport default new CanvasState();","map":{"version":3,"names":["makeAutoObservable","CanvasState","constructor","canvas","undoList","redoList","username","socket","session","setSocket","value","setSession","setUserName","setCanvas","pushToUndo","data","push","pushToRedo","undo","context","getContext","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","heigth","redo"],"sources":["/Users/malinatrash/Library/Mobile Documents/com~apple~CloudDocs/develop/Web/paint-online/client/src/store/canvasState.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx'\n\nclass CanvasState {\n\tcanvas = null\n\tundoList = []\n\tredoList = []\n\tusername = ''\n\tsocket = null\n\tsession = null\n\n\tconstructor() {\n\t\tmakeAutoObservable(this)\n\t}\n\n\tsetSocket(value) {\n\t\tthis.socket = value\n\t}\n\n\tsetSession(value) {\n\t\tthis.session = value\n\t}\n\n\tsetUserName(username) {\n\t\tthis.username = username\n\t}\n\n\tsetCanvas(canvas) {\n\t\tthis.canvas = canvas\n\t}\n\n\tpushToUndo(data) {\n\t\tthis.undoList.push(data)\n\t}\n\n\tpushToRedo(data) {\n\t\tthis.redoList.push(data)\n\t}\n\n\tundo() {\n\t\tlet context = this.canvas.getContext('2d')\n\t\tif (this.undoList.length > 0) {\n\t\t\tlet dataUrl = this.undoList.pop()\n\t\t\tthis.redoList.push(this.canvas.toDataURL())\n\t\t\tlet img = new Image()\n\t\t\timg.src = dataUrl\n\t\t\timg.onload = () => {\n\t\t\t\tcontext.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tcontext.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.clearRect(0, 0, this.canvas.width, this.canvas.heigth)\n\t\t}\n\t}\n\n\tredo() {\n\t\tlet context = this.canvas.getContext('2d')\n\t\tif (this.redoList.length > 0) {\n\t\t\tlet dataUrl = this.redoList.pop()\n\t\t\tthis.undoList.push(this.canvas.toDataURL())\n\t\t\tlet img = new Image()\n\t\t\timg.src = dataUrl\n\t\t\timg.onload = () => {\n\t\t\t\tcontext.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tcontext.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default new CanvasState()\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}